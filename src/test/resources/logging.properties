# Livello globale predefinito per tutti i logger
.level = INFO

# Usa solo la console come destinazione dei log nei test
handlers = java.util.logging.ConsoleHandler

# Configurazione dell'handler di console (Alzare a FINER per maggior dettaglio)
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Formato compatto e leggibile (Java 9+)
# [%1$tF %1$tT] -> timestamp ISO (yyyy-MM-dd HH:mm:ss)
# [%4$s]        -> livello (INFO, WARNING, ...)
# [%3$s]        -> nome del logger (tipicamente il nome classe)
# %5$s          -> messaggio
# %6$s          -> eccezione stacktrace (se presente)
java.util.logging.SimpleFormatter.format = [%1$tF %1$tT] [%4$s] [%3$s] %5$s %6$s%n

# Sezioni specifiche (facoltative ma utili):

# Alza la verbosità del tuo codice applicativo durante i test
# Sostituisci il package con quello effettivo del tuo progetto:
it.naar.quiz.level = FINE

# Per limitare rumore da librerie esterne durante i test:
# Imposta INFO (o WARNING) su librerie chiacchierone
org.eclipse.level = INFO
org.glassfish.level = INFO
jakarta.level = INFO

# Esempio: se vuoi ancora più dettaglio in un sotto-package
#it.naar.quiz.domain = FINER

# Suggerimento: per abilitare log di SQL/ORM (se usi EclipseLink)
# org.eclipse.persistence.level = INFO
# org.eclipse.persistence.logging.sql.level = FINE
# org.eclipse.persistence.logging.parameters.level = FINE
